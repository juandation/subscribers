{"ast":null,"code":"import _slicedToArray from \"/Users/Juanda/Documents/Programacio\\u0301n Web/Comono/Test/test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Juanda/Documents/Programacio\\u0301n Web/Comono/Test/test/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport environment from \"./environments/environment\"; //Components\n\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport Card from \"./components/card\";\n\nfunction App() {\n  //Hook State\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        subscribers = _useState2[0],\n        setSubscribers = _useState2[1]; //Hook\n\n\n  useEffect(() => {\n    const subscribersUrl = environment.serverUrl;\n\n    async function getSubscribers() {\n      const response = await fetch(subscribersUrl);\n      const subscribersData = await response.json();\n      setSubscribers(subscribersData); //console.log(subscribersData);\n    }\n\n    getSubscribers();\n    return;\n  }, []); //SortByName\n\n  const byName = function sortByName() {\n    function compare(a, b) {\n      const nameA = a.name.toUpperCase();\n      const nameB = b.name.toUpperCase();\n      let comparison = 0;\n\n      if (nameA > nameB) {\n        comparison = 1;\n      } else if (nameA < nameB) {\n        comparison = -1;\n      }\n\n      return comparison;\n    }\n\n    const nameSorted = subscribers.sort(compare);\n    window.value = nameSorted;\n    console.log(nameSorted);\n  };\n\n  setSubscribers(nameSorted); //sortByAge\n\n  const byAge = function sortByName() {\n    function compare(a, b) {\n      const ageA = a.age;\n      const ageB = b.age;\n      let comparison = 0;\n\n      if (ageA > ageB) {\n        comparison = 1;\n      } else if (ageA < ageB) {\n        comparison = -1;\n      }\n\n      return comparison;\n    }\n\n    const ageSorted = subscribers.sort(compare);\n    console.log(ageSorted);\n    setSubscribers(ageSorted);\n  }; //sortBySport\n\n\n  const bySport = function sortByName() {\n    function compare(a, b) {\n      const sportA = a.sport.toUpperCase();\n      const sportB = b.sport.toUpperCase();\n      let comparison = 0;\n\n      if (sportA > sportB) {\n        comparison = 1;\n      } else if (sportA < sportB) {\n        comparison = -1;\n      }\n\n      return comparison;\n    }\n\n    const sportSorted = subscribers.sort(compare);\n    console.log(sportSorted);\n    setSubscribers(sportSorted);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"lastName\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Age\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Sport\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, subscribers.map(subscriber => {\n    return React.createElement(\"tr\", {\n      key: subscriber.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, subscriber.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, subscriber.lastName), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, subscriber.age), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, subscriber.sport));\n  })))), React.createElement(\"button\", {\n    onClick: byName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Sort By Name\"), React.createElement(\"button\", {\n    onClick: byAge,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Sort By Age\"), React.createElement(\"button\", {\n    onClick: bySport,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Sort By Sport\"), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Juanda/Documents/ProgramacioÃÅn Web/Comono/Test/test/src/App.js"],"names":["React","useState","useEffect","environment","Header","Footer","Card","App","subscribers","setSubscribers","subscribersUrl","serverUrl","getSubscribers","response","fetch","subscribersData","json","byName","sortByName","compare","a","b","nameA","name","toUpperCase","nameB","comparison","nameSorted","sort","window","value","console","log","byAge","ageA","age","ageB","ageSorted","bySport","sportA","sport","sportB","sportSorted","map","subscriber","id","lastName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport environment from \"./environments/environment\";\n\n//Components\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport Card from \"./components/card\";\n\nfunction App() {\n  //Hook State\n  const [subscribers, setSubscribers] = useState([]);\n\n  //Hook\n  useEffect(() => {\n    const subscribersUrl = environment.serverUrl;\n    async function getSubscribers() {\n      const response = await fetch(subscribersUrl);\n      const subscribersData = await response.json();\n      setSubscribers(subscribersData);\n      //console.log(subscribersData);\n    }\n    getSubscribers();\n    return;\n  }, []);\n\n  //SortByName\n  const byName = function sortByName() {\n    function compare(a, b) {\n      const nameA = a.name.toUpperCase();\n      const nameB = b.name.toUpperCase();\n\n      let comparison = 0;\n      if (nameA > nameB) {\n        comparison = 1;\n      } else if (nameA < nameB) {\n        comparison = -1;\n      }\n      return comparison;\n    }\n    const nameSorted = subscribers.sort(compare);\n    window.value = nameSorted;\n    console.log(nameSorted);\n  };\n  setSubscribers(nameSorted);\n\n  //sortByAge\n  const byAge = function sortByName() {\n    function compare(a, b) {\n      const ageA = a.age;\n      const ageB = b.age;\n\n      let comparison = 0;\n      if (ageA > ageB) {\n        comparison = 1;\n      } else if (ageA < ageB) {\n        comparison = -1;\n      }\n      return comparison;\n    }\n    const ageSorted = subscribers.sort(compare);\n    console.log(ageSorted);\n    setSubscribers(ageSorted);\n  };\n  //sortBySport\n  const bySport = function sortByName() {\n    function compare(a, b) {\n      const sportA = a.sport.toUpperCase();\n      const sportB = b.sport.toUpperCase();\n\n      let comparison = 0;\n      if (sportA > sportB) {\n        comparison = 1;\n      } else if (sportA < sportB) {\n        comparison = -1;\n      }\n      return comparison;\n    }\n    const sportSorted = subscribers.sort(compare);\n    console.log(sportSorted);\n    setSubscribers(sportSorted);\n  };\n\n  return (\n    <div className='App'>\n      <Header />\n      <div>\n        <table className='App-header'>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>lastName</th>\n              <th>Age</th>\n              <th>Sport</th>\n            </tr>\n          </thead>\n          <tbody>\n            {subscribers.map(subscriber => {\n              return (\n                <tr key={subscriber.id}>\n                  <td>{subscriber.name}</td>\n                  <td>{subscriber.lastName}</td>\n                  <td>{subscriber.age}</td>\n                  <td>{subscriber.sport}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      <button onClick={byName}>Sort By Name</button>\n\n      <button onClick={byAge}>Sort By Age</button>\n      <button onClick={bySport}>Sort By Sport</button>\n      <Card />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}